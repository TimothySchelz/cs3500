<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpreadsheetUtilities</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:SpreadsheetUtilities.DependencyGraph" -->
        <member name="M:SpreadsheetUtilities.DependencyGraph.#ctor">
            <summary>
            Creates an empty DependencyGraph.
            </summary>
        </member>
        <member name="P:SpreadsheetUtilities.DependencyGraph.Size">
            <summary>
            The number of ordered pairs in the DependencyGraph.
            </summary>
        </member>
        <member name="P:SpreadsheetUtilities.DependencyGraph.Item(System.String)">
            <summary>
            The size of dependees(s).
            This property is an example of an indexer.  If dg is a DependencyGraph, you would
            invoke it like this:
            dg["a"]
            It should return the size of dependees("a")
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.HasDependents(System.String)">
            <summary>
            Reports whether dependents(s) is non-empty.
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.HasDependees(System.String)">
            <summary>
            Reports whether dependees(s) is non-empty.
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.GetDependents(System.String)">
            <summary>
            Enumerates dependents(s).
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.GetDependees(System.String)">
            <summary>
            Enumerates dependees(s).
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.AddDependency(System.String,System.String)">
             <summary>
             <para>Adds the ordered pair (s,t), if it doesn't exist</para>
             
             <para>This should be thought of as:</para>   
             
               t depends on s
            
             </summary>
             <param name="s"> s must be evaluated first. T depends on S</param>
             <param name="t"> t cannot be evaluated until s is</param>        /// 
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.RemoveDependency(System.String,System.String)">
            <summary>
            Removes the ordered pair (s,t), if it exists
            </summary>
            <param name="s"></param>
            <param name="t"></param>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.ReplaceDependents(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes all existing ordered pairs of the form (s,r).  Then, for each
            t in newDependents, adds the ordered pair (s,t).
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.DependencyGraph.ReplaceDependees(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes all existing ordered pairs of the form (r,s).  Then, for each 
            t in newDependees, adds the ordered pair (t,s).
            </summary>
        </member>
        <member name="T:SpreadsheetUtilities.Node">
            <summary>
            A Node to represent the individual cells and remember what it depends on and what depends on it.  Basically the nodes of a directed graph.
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.Node.#ctor(System.String)">
            <summary>
            A constructor.  The node needs a name but that is it.
            </summary>
            <param name="name">The name of the node</param>
        </member>
        <member name="P:SpreadsheetUtilities.Node.name">
            <summary>
            The name of the node.
            </summary>
        </member>
        <member name="P:SpreadsheetUtilities.Node.DentsSize">
            <summary>
            The size of the dependents of this node
            </summary>
        </member>
        <member name="P:SpreadsheetUtilities.Node.DeesSize">
            <summary>
            The size of the dependees of this node
            </summary>
        </member>
        <member name="P:SpreadsheetUtilities.Node.Dents">
            <summary>
            A Hashset with the dependents of this node.
            </summary>
        </member>
        <member name="P:SpreadsheetUtilities.Node.Dees">
            <summary>
            A Hashset with the dependees of this node
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.Node.AddDent(System.String)">
            <summary>
            Adds the string to the dependents
            </summary>
            <param name="s">The string to be added to the dependents</param>
        </member>
        <member name="M:SpreadsheetUtilities.Node.AddDee(System.String)">
            <summary>
            Adds the string to the dependees
            </summary>
            <param name="s">The string to be added to the dependees</param>
        </member>
        <member name="M:SpreadsheetUtilities.Node.RemoveDent(System.String)">
            <summary>
            Removes the string s from the dependents.  If s is not in dependents it does nothing.
            </summary>
            <param name="s">The string to be removed</param>
        </member>
        <member name="M:SpreadsheetUtilities.Node.RemoveDee(System.String)">
            <summary>
            Removes the string s from the dependees.  If s is not in dependees it does nothing.
            </summary>
            <param name="s">The string to be removed</param>
        </member>
        <member name="M:SpreadsheetUtilities.Node.EraseDents">
            <summary>
            Removes all the dependents of this node
            </summary>
        </member>
        <member name="M:SpreadsheetUtilities.Node.EraseDees">
            <summary>
            Removes all the dependees of this node
            </summary>
        </member>
    </members>
</doc>
